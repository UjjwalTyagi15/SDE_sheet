/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        ListNode* prev=NULL;
        ListNode* curr=head;
        ListNode* nex=head;
        ListNode* temp=head;
        for(int i=0;i<k;i++){
            if(temp==NULL)return head;
            temp=temp->next;

        }
        for(int i=0;i<k;i++){
            nex=nex->next;
            curr->next=prev;
            prev=curr;
            curr=nex;
        }
        // cout<<prev->val<<" "<<nex->val<<endl;
        head->next=reverseKGroup(nex,k);
        return prev;
        
        
    }
};